<Window x:Class="PLWPF_Updated.UpdateHostingUnitWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF_Updated"
        mc:Ignorable="d" FontSize="18" FontFamily="Bookman Old Style"
        Title="ApdateHostingUnitWindow" Height="650" Width="800">



    <Grid x:Name="UpdateUnitGrid" Background="DarkCyan">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto" MinHeight="81"/>
            <RowDefinition/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Welcome to Update HostingUnit:" FontSize="35" Grid.Column="2"  Grid.Row="1" Grid.ColumnSpan="4" Margin="3" FontWeight="Bold">
            <TextBlock.TextDecorations>
                <TextDecoration/>
            </TextBlock.TextDecorations>
        </TextBlock>


        <TextBlock HorizontalAlignment="Center" Text="Please select a hosting unit:" VerticalAlignment="Center" FontSize="18" Grid.Column="2" Grid.Row="2" Margin="3"/>
        <ComboBox x:Name="HostingUnitsComboBox"  Grid.Column="3" Grid.Row="2" Margin="50,9,49,9" SelectedIndex="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="24" SelectionChanged="HostingUnitsComboBox_SelectionChanged"/>



        <TextBlock Text="enter the unit's name:" Grid.Column="2" Grid.Row="3" Margin="3"/>
        <TextBox x:Name="unitName" Grid.Row="3" Grid.Column="3" Margin="3" Text="{Binding HostingUnitName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="150"/>

        <TextBlock Text="area of the country:" Grid.Column="2" Grid.Row="4" Margin="3"/>
        <ComboBox x:Name="unitArea" Grid.Row="4" Grid.Column="3" Margin="3" Background="Beige" SelectedItem="{Binding Area}" Width="150"/>

        <TextBlock Text="enter the unit's type:" Grid.Column="2" Grid.Row="5" Margin="3"/>
        <ComboBox x:Name="unitType" Grid.Row="5" Grid.Column="3" Margin="3" SelectedItem="{Binding Type}" Width="150"/>

        <CheckBox x:Name="Pool" Content="pool" Grid.Column="2" Grid.Row="6"  IsChecked="{Binding HasPool ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <CheckBox x:Name="NearByGroceryStore" Content="NearByGroceryStore" Grid.Column="2" Grid.Row="7"  IsChecked="{Binding HasNearByGroceryStore ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <CheckBox x:Name="Garden" Content="Garden" Grid.Column="2" Grid.Row="8"  IsChecked="{Binding HasGarden,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,8"/>
        <CheckBox x:Name="ChildrensAttractions" Content="ChildrensAttractions" Grid.Column="2" Grid.Row="9"  IsChecked="{Binding HasChildrensAttractions,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>

        <Button x:Name="UpdateHostingUnit" Content="Update Hosting Unit" Margin="3,2,0,4" Grid.Column="2" Grid.Row="11" Click="Update_click">
            <Button.Style>
                <Style TargetType="Button" x:Name="UpdateButtonAvailable">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=unitName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=unitArea}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=unitType}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Foreground" Value="Maroon"/>
                    <Setter Property="Background" Value="Beige"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </Style>
            </Button.Style>
        </Button>




        <Button x:Name="DeleteHostingUnit" Content="Delete Hosting Unit" Margin="3,2,0,4" Grid.Column="3" Grid.Row="11" Click="DeleteHostingUnit_Click">
            <Button.Style>
                <Style TargetType="Button" x:Name="DeleteButtonAvailable">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=unitName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=unitArea}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=unitType}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Foreground" Value="Maroon"/>
                    <Setter Property="Background" Value="Beige"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </Style>
            </Button.Style>
        </Button>




        <Image Source="/Images/HotelRoomImage.jpg" Grid.Column="3" Grid.Row="6"  MaxHeight="200" Margin="3" Grid.RowSpan="4"/>




        <Grid Grid.Column="2" Grid.Row="12" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="Back" Content="Return" Click="Back_Click"  Margin="3" Background="Black" Foreground="Green" Grid.Column="2" Height="30"/>
            <Button x:Name="LogOff" Content="Log Off"  Margin="3" Background="Black" Foreground="Green" Grid.Column="3" Click="LogOff_Click" Height="30"/>
        </Grid>
    </Grid>
</Window>

